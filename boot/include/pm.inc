; 段描述符相关说明
;
; 1. 存储段描述符所描述的存储段的具体属性：
;
;    数据段类型    类型值        说明
;            ----------------------------------
;            0        只读
;            1        只读、已访问
;            2        读/写
;            3        读/写、已访问
;            4        只读、向下扩展
;            5        只读、向下扩展、已访问
;            6        读/写、向下扩展
;            7        读/写、向下扩展、已访问
;
;
;            类型值        说明
;    代码段类型    ----------------------------------
;            8        只执行
;            9        只执行、已访问
;            A        执行/读
;            B        执行/读、已访问
;            C        只执行、一致码段
;            D        只执行、一致码段、已访问
;            E        执行/读、一致码段
;            F        执行/读、一致码段、已访问
;
;
;    系统段类型    类型编码    说明
;            ----------------------------------
;            0        <未定义>
;            1        可用 286TSS
;            2        LDT
;            3        忙的 286TSS
;            4        286 调用门
;            5        任务门
;            6        286 中断门
;            7        286 陷阱门
;            8        未定义
;            9        可用 386TSS
;            A        <未定义>
;            B        忙的 386TSS
;            C        386 调用门
;            D        <未定义>
;            E        386 中断门
;            F        386 陷阱门
;
; 2. G 位: 段界限粒度 Granularity
;        G=0 表示界限粒度为字节；
;        G=1 表示界限粒度为4K 字节。
;        ATTENTION: 界限粒度只对段界限有效，对段基地址无效，段基地址总是以字节为单位。
;
; 3. D 位: D 位是一个很特殊的位，在描述可执行段、向下扩展数据段或由 SS 寄存器寻址的段(通常是堆栈段)的三种描述符中的意义各不相同。
;           ⑴ 在描述可执行段的描述符中，D位决定了指令使用的地址及操作数所默认的大小。
;        ① D=1表示默认情况下指令使用32位地址及32位或8位操作数，这样的代码段也称为32位代码段；
;        ② D=0 表示默认情况下，使用16位地址及16位或8位操作数，这样的代码段也称为16位代码段，它与80286兼容。可以使用地址大小前缀和操作数大小前缀分别改变默认的地址或操作数的大小。
;           ⑵ 在向下扩展数据段的描述符中，D位决定段的上部边界。
;        ① D=1表示段的上部界限为4G；
;        ② D=0表示段的上部界限为64K，这是为了与80286兼容。
;           ⑶ 在描述由SS寄存器寻址的段描述符中，D位决定隐式的堆栈访问指令(如PUSH和POP指令)使用何种堆栈指针寄存器。
;        ① D=1表示使用32位堆栈指针寄存器ESP；
;        ② D=0表示使用16位堆栈指针寄存器SP，这与80286兼容。

;----------------------------------------------------------------------------
; 描述符类型值说明
; 其中:
;       DA_  : Descriptor Attribute
;       D    : 数据段
;       C    : 代码段
;       S    : 系统段
;       R    : 只读
;       RW   : 读写
;       A    : 已访问
;       其它 : 可按照字面意思理解
;----------------------------------------------------------------------------
DA_32       equ 4000h 		; 32 位段
DA_LIMIT_4K equ 8000h 		; 段界限粒度为 4K 字节

DA_DPL0     equ 00h   		; DPL = 0
DA_DPL1     equ 20h   		; DPL = 1
DA_DPL2     equ 40h   		; DPL = 2
DA_DPL3     equ 60h   		; DPL = 3
;----------------------------------------------------------------------------
; 存储段描述符类型值说明
;----------------------------------------------------------------------------
DA_DR       equ 90h   		; 存在的只读数据段类型值
DA_DRW      equ 92h   		; 存在的可读写数据段属性值
DA_DRWA     equ 93h   		; 存在的已访问可读写数据段类型值
DA_C        equ 98h   		; 存在的只执行代码段属性值
DA_CR       equ 9Ah   		; 存在的可执行可读代码段属性值
DA_CCO      equ 9Ch   		; 存在的只执行一致代码段属性值
DA_CCOR     equ 9Eh   		; 存在的可执行可读一致代码段属性值
;----------------------------------------------------------------------------
; 系统段描述符类型值说明
;----------------------------------------------------------------------------
DA_LDT      equ 82h   		; 局部描述符表段类型值
DA_TaskGate equ 85h   		; 任务门类型值
DA_386TSS   equ 89h   		; 可用 386 任务状态段类型值
DA_386CGate equ 8Ch   		; 386 调用门类型值
DA_386IGate equ 8Eh   		; 386 中断门类型值
DA_386TGate equ 8Fh   		; 386 陷阱门类型值
;----------------------------------------------------------------------------

;----------------------------------------------------------------------------
; 选择子类型值说明
; 其中:
;       SA_  : Selector Attribute
SA_RPL0 equ 0    ; ┓
SA_RPL1 equ 1    ; ┣ RPL
SA_RPL2 equ 2    ; ┃
SA_RPL3 equ 3    ; ┛
SA_TIG  equ 0    ; ┓TI
SA_TIL  equ 4    ; ┛
;----------------------------------------------------------------------------

;----------------------------------------------------------------------------
; 分页机制使用的常量说明
;----------------------------------------------------------------------------
PG_P   equ 1 	; 页存在属性位
PG_RWR equ 0 	; R/W 属性位值, 读/执行
PG_RWW equ 2 	; R/W 属性位值, 读/写/执行
PG_USS equ 0 	; U/S 属性位值, 系统级
PG_USU equ 4 	; U/S 属性位值, 用户级
;----------------------------------------------------------------------------

; =========================================
; FLAGS - Intel 8086 Family Flags Register
; =========================================
;
;      |11|10|F|E|D|C|B|A|9|8|7|6|5|4|3|2|1|0|
;        |  | | | | | | | | | | | | | | | | '---  CF……Carry Flag
;        |  | | | | | | | | | | | | | | | '---  1
;        |  | | | | | | | | | | | | | | '---  PF……Parity Flag
;        |  | | | | | | | | | | | | | '---  0
;        |  | | | | | | | | | | | | '---  AF……Auxiliary Flag
;        |  | | | | | | | | | | | '---  0
;        |  | | | | | | | | | | '---  ZF……Zero Flag
;        |  | | | | | | | | | '---  SF……Sign Flag
;        |  | | | | | | | | '---  TF……Trap Flag  (Single Step)
;        |  | | | | | | | '---  IF……Interrupt Flag
;        |  | | | | | | '---  DF……Direction Flag
;        |  | | | | | '---  OF……Overflow flag
;        |  | | | '-----  IOPL……I/O Privilege Level  (286+ only)
;        |  | | '-----  NT……Nested Task Flag  (286+ only)
;        |  | '-----  0
;        |  '-----  RF……Resume Flag (386+ only)
;        '------  VM……Virtual Mode Flag (386+ only)
;
; NOTE: see {pushf, popf, sti, cli, std, cld}

; Descriptor
; usage: Descriptor Base, Limit, Attr
;        Base:  dd
;        Limit: dd (low 20 bits available)
;        Attr:  dw (lower 4 bits of higher byte are always 0)
%macro Descriptor 3
    dw	%2 & 0FFFFh                          ; 段界限 1
    dw  %1 & 0FFFFh                          ; 段基址 1
    db  (%1 >> 16) & 0FFh                    ; 段基址 2
    dw  ((%2 >> 8) & 0F00h) | (%3 & 0F0FFh)  ; 属性 1 + 段界限 2 + 属性 2
    db  (%1 >> 24) & 0FFh                    ; 段基址 3
%endmacro

; Gate
; usage: Gate Selector, Offset, DCount, Attr
;        Selector:  dw
;        Offset:    dd
;        DCount:    db
;        Attr:      db
%macro Gate 4
    dw  (%2 & 0FFFFh)                        ; 偏移 1
    dw  %1                                   ; 选择子
    dw  (%3 & 1Fh) | ((%4 << 8) & 0FF00h)    ; 属性
    dw  ((%2 >> 16) & 0FFFFh)                ; 偏移 2
%endmacro
